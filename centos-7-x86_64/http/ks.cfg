# Adapted from https://raw.githubusercontent.com/CentOS/sig-cloud-instance-build/2eae16293116e384472996996860494486d8dc96/vagrant/centos7.ks
install
url --url=http://mirror.cc.columbia.edu/pub/linux/centos/7/os/x86_64/
text
keyboard us
lang en_US.UTF-8
skipx
network --device eth0 --bootproto dhcp
rootpw vagrant
firewall --disabled
authconfig --enableshadow --enablemd5
selinux --permissive
timezone --utc America/New_York
# The biosdevname and ifnames options ensure we get "eth0" as our interface
# even in environments like virtualbox that emulate a real NW card
bootloader --location=mbr --append="console=tty0 console=ttyS0,115200 net.ifnames=0 biosdevname=0"
zerombr
clearpart --all --initlabel
autopart
reboot --eject
user --name=vagrant --password=vagrant

repo --name=epel --baseurl=http://mirror.rit.edu/epel/7/x86_64/
repo --name=updates --baseurl=http://mirror.cc.columbia.edu/pub/linux/centos/7/updates/x86_64/

%packages --ignoremissing
@core

# We don't need firmware in a VM, nor IBM Power utilities.
-iprutils
-aic94xx-firmware
-alsa-firmware
-bfa-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-linux-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware

# System management utilities.
man
man-pages
bash-completion
sudo
wget
curl
vim-enhanced
bzip2
gzip
unzip
patch

# Install Puppet 3.6.2 from EPEL. Get deep_merge for deep Hiera hash merging.
facter
puppet
hiera
rubygem-deep_merge
redhat-lsb-core

# Install Ansible 1.9.2 or later from EPEL and MySQL management support.
ansible
MySQL-python

# Delta RPMs for smaller transfers over the wire.
deltarpm

# Monitoring tools.
htop
dstat

# Support for rsync and NFS in Vagrant.
nfs-utils
rsync
openssh-clients
%end

%post
# Needed to allow this to boot a second time with an unknown MAC
cp -f /etc/sysconfig/network-scripts/ifcfg-eth0 /tmp/eth0
sed "/^HWADDR/d" /tmp/eth0 > /etc/sysconfig/network-scripts/ifcfg-eth0
sed -e "s/dhcp/none/;s/eth0/eth1/" /etc/sysconfig/network-scripts/ifcfg-eth0 > /etc/sysconfig/network-scripts/ifcfg-eth1

# Vagrant-specific sudo rules
echo "Defaults:vagrant !requiretty" >> /etc/sudoers.d/vagrant
echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant

# Default insecure vagrant key
mkdir -m 0700 -p /home/vagrant/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key" >> /home/vagrant/.ssh/authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

# Update to the CentOS 7.2 kernel to allow use of overlay in Docker.
yum -y install epel-release
yum -y update
yum -y --enablerepo=cr update kernel
%end
